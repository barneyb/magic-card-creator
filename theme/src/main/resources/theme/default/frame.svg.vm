<svg width="875" height="1225" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
     viewBox="0 0 875 1225">
#* @vtlvariable name="tool" type="com.barneyb.magic.creator.theme.FrameTool" *#
#* @vtlvariable name="bounds" type="java.awt.Rectangle" *#
#* @vtlvariable name="texture" type="com.barneyb.magic.creator.api.Texture" *#
#* @vtlvariable name="flood" type="com.barneyb.magic.creator.api.Flood" *#
    #set($docid = $tool.unique())
    <defs>
        <path id="-title" d="
            M 0 -40
            h 377
            c 18 20 18 60 0 80
            h -754
            c -18 -20 -18 -60 0 -80
            z
        " />
        <path id="-art" d="
            M 0 -277.5
            h 377
            v 555
            h -754
            v -555
            z
        " />
        <path id="-type" d="
            M 0 -40
            h 377
            c 15 20 15 55 0 75
            h -754
            c -15 -20 -15 -55 0 -75
            z
        " />
        <path id="-text" d="
            M 0 -175
            h 377
            v 350
            h -754
            v -350
            z
        " />
        <path id="-pt" d="
            M 0 -31
            h 68
            c 7 20 7 42 0 62
            h -136
            c -7 -20 -7 -42 0 -62
            z
        " />
        <!-- pullout and pushin are identical, just with flipped around coords -->
        <filter id="pulloutFilter">
            <feGaussianBlur in="SourceAlpha" stdDeviation="4" result="blur" />
            <feOffset dy="4" dx="-4" />
            <feComposite in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="hlDiff" />
            <feFlood flood-color="white" flood-opacity="1" />
            <feComposite in2="hlDiff" operator="in" />
            <feComposite in2="SourceGraphic" operator="over" result="withGlow" />

            <feOffset in="blur" dy="-4" dx="4" />
            <feComposite in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="shadowDiff" />
            <feFlood flood-color="black" flood-opacity="1" />
            <feComposite in2="shadowDiff" operator="in" />
            <feComposite in2="withGlow" operator="over" />
        </filter>
        <filter id="pushinFilter">
            <feGaussianBlur in="SourceAlpha" stdDeviation="4" result="blur" />
            <feOffset dy="-4" dx="4" />
            <feComposite in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="hlDiff" />
            <feFlood flood-color="white" flood-opacity="1" />
            <feComposite in2="hlDiff" operator="in" />
            <feComposite in2="SourceGraphic" operator="over" result="withGlow" />

            <feOffset in="blur" dy="4" dx="-4" />
            <feComposite in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="shadowDiff" />
            <feFlood flood-color="black" flood-opacity="1" />
            <feComposite in2="shadowDiff" operator="in" />
            <feComposite in2="withGlow" operator="over" />
        </filter>

        <filter id="dropFilter">
            <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
            <feOffset dx="-5" dy="5" result="shadow" />
            <feFlood flood-color="#000" />
            <feComposite in2="shadow" operator="in" />
            <feMerge>
                <feMergeNode />
                <feMergeNode />
                <feMergeNode in="SourceGraphic" />
            </feMerge>
        </filter>

        #if($tool.creature)
            <filter id="ptDropFilter" filterUnits="objectBoundingBox" height="140%">
                <feGaussianBlur in="SourceAlpha" stdDeviation="5" />
                <feOffset dx="-4" dy="7" result="shadow" />
                <feFlood flood-color="#000" />
                <feComposite in2="shadow" operator="in" />
                <feMerge>
                    <feMergeNode />
                    <feMergeNode in="SourceGraphic" />
                </feMerge>
            </filter>
        #end

        #macro(flood $bounds $flood)
            <rect width="$bounds.width" height="$bounds.height" fill="$tool.toValue($flood.color)"#if($flood.nonOpaque)
                  opacity="$flood.opacity"#end />
        #end
        #macro(texture $id $texture)
            <pattern id="${id}_$docid" patternUnits="userSpaceOnUse" width="$texture.bounds.width" height="$texture.bounds.height">
                #if($texture.underFlooded)
                    #flood($texture.bounds, $texture.underFlood)
                #end
                <image x="$tool.negate($texture.bounds.x)" y="$tool.negate($texture.bounds.y)"
                       width="$texture.image.size.width" height="$texture.image.size.height"
                       xlink:href="$tool.toDataUrl($texture.image.image)"#if($texture.nonOpaque)
                       opacity="$texture.opacity"#end />
                #if($texture.overFlooded)
                    #flood($texture.bounds, $texture.overFlood)
                #end
            </pattern>
        #end

        #texture("bar", $tool.barTexture)

        #if($tool.semiEnchantment)
            #texture("enchantmentFrame", $tool.semiEnchantmentTexture)

            <linearGradient id="frameTopGradient_$docid" gradientTransform="rotate(90)">
                <stop offset=".5" stop-color="white" stop-opacity="1" />
                <stop offset=".8" stop-color="white" stop-opacity="0" />
            </linearGradient>
            <mask id="frameTopMask_$docid">
                <rect width="100%" height="100%" fill="url(#frameTopGradient_$docid)" />
            </mask>
        #end

        #set($txs = $tool.frameTextures)
        #foreach($t in $txs)
            #texture("frame_$foreach.index" $t)
            #if(! $foreach.first)
                <linearGradient id="frameGradient_${foreach.index}_$docid">
                    <stop offset="$tool.gradientStart($foreach.index, $txs.size())" stop-color="white" stop-opacity="0" />
                    <stop offset="$tool.gradientEnd($foreach.index, $txs.size())" stop-color="white" stop-opacity="1" />
                </linearGradient>
                <mask id="frameMask_${foreach.index}_$docid">
                    <rect width="100%" height="100%" fill="url(#frameGradient_${foreach.index}_$docid)" />
                </mask>
            #end
        #end

        #set($txs = $tool.textboxTextures)
        #foreach($t in $txs)
            #texture("textbox_$foreach.index" $t)
            #if(! $foreach.first)
                <linearGradient id="textboxGradient_${foreach.index}_$docid">
                    <stop offset="$tool.gradientStart($foreach.index, $txs.size())" stop-color="white" stop-opacity="0" />
                    <stop offset="$tool.gradientEnd($foreach.index, $txs.size())" stop-color="white" stop-opacity="1" />
                </linearGradient>
                <mask id="textboxMask_${foreach.index}_$docid">
                    <rect x="-377" y="-175" width="754" height="350" fill="url(#textboxGradient_${foreach.index}_$docid)" />
                </mask>
            #end
        #end

        <linearGradient id="border_$docid">
            #set($cs = $tool.borderColors)
            #foreach($c in $cs)
                <stop offset="$tool.gradientPoint($foreach.index, $cs.size())" stop-color="$tool.toValue($c)" />
            #end
        </linearGradient>

    </defs>
    <g>
        <rect width="875" height="1225" fill="#000" />
        #foreach($t in $tool.frameTextures)
            <rect x="35" y="35" width="805" height="1155" fill="url(#frame_${foreach.index}_$docid)"#if(! $foreach.first) mask="url(#frameMask_${foreach.index}_$docid)"#end />
        #end
        #if($tool.semiEnchantment)
            <rect x="35" y="35" width="805" height="1155" fill="url(#enchantmentFrame_$docid)" mask="url(#frameTopMask_$docid)" />
        #end

        <!-- border drop shadow -->
        <g filter="url(#dropFilter)" fill="none" stroke="#000" stroke-width="5">
            <use xlink:href="#-title" x="439" y="92" />
            <use xlink:href="#-art" x="439" y="409.5" />
            <use xlink:href="#-type" x="439" y="727" />
            <use xlink:href="#-text" x="439" y="937" />
        </g>

        <!-- title bar -->
        <g transform="translate(439 92)">
            <g transform="scale(.993 .93)">
                <g filter="url(#pulloutFilter)">
                    <use xlink:href="#-title" fill="url(#bar_$docid)" />
                </g>
                <use xlink:href="#-title" stroke="#000" stroke-width="5" fill="none" />
            </g>
        </g>

        <!-- artwork hole -->
        <use xlink:href="#-art" x="439" y="409.5" fill="#000" />

        <!-- type bar -->
        <g transform="translate(439 727)">
            <g transform="scale(.993 .93)">
                <g filter="url(#pulloutFilter)">
                    <use xlink:href="#-type" fill="url(#bar_$docid)" />
                </g>
                <use xlink:href="#-type" stroke="#000" stroke-width="5" fill="none" />
            </g>
        </g>

        <!-- textbox -->
        <g transform="translate(439 937)">
            <g transform="scale(.9934 .9857)">
                <g filter="url(#pushinFilter)">
                    #foreach($t in $tool.textboxTextures)
                        <use xlink:href="#-text" fill="url(#textbox_${foreach.index}_$docid)"#if(! $foreach.first) mask="url(#textboxMask_${foreach.index}_$docid)"#end />
                    #end
                </g>
            </g>
        </g>

        <!-- actual border -->
        <g fill="none" stroke="url(#border_$docid)" stroke-width="5">
            <use xlink:href="#-title" x="439" y="92" />
            <use xlink:href="#-art" x="439" y="409.5" />
            <use xlink:href="#-type" x="439" y="727" />
            <use xlink:href="#-text" x="439" y="937" />
        </g>

        #if($tool.creature)
            <!-- power/toughness block -->
            <g transform="translate(742 1135)" filter="url(#ptDropFilter)">
                <g transform="scale(.975 .93)">
                    <g filter="url(#pushinFilter)">
                        <use xlink:href="#-pt" fill="url(#bar_$docid)" />
                    </g>
                </g>
                <g transform="scale(1.04 1.08)">
                    <use xlink:href="#-pt" stroke="#000" stroke-width="3" fill="none" />
                </g>
                <g fill="none" stroke="$tool.toValue($tool.powerToughnessBoxColor)" stroke-width="4">
                    <use xlink:href="#-pt" />
                </g>
            </g>
        #end
    </g>
</svg>
